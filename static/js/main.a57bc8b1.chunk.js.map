{"version":3,"sources":["assets/windmill.png","assets/windmill-spiner.png","Page1/AnimatedTyping.js","Page1/PageOne.js","Page1/AnimatedTitleAndSubtitleBlock.js","Page2/Paragraph.js","Page2/PageTwo.js","Pagination.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AnimatedTyping","props","typingText","speed","type","text","state","sentanceIndex","substring","letterIndex","setState","typing","typeSantance","setTimeout","length","clearTimeout","console","log","doneTyping","this","startTyping","nextProps","nextState","clearTyping","prevProps","prevState","className","Component","Page1","onDoneParagraphTyping","texts","onTyping","onTypingMode","class","map","textblock","index","window","innerWidth","src","width","height","frameborder","allow","allowfullscreen","Paragraph","company","title","date","description","Page2","Pagination","page","showErrows","onClick","flipPage","App","direction","onTypingAnimation","onPage","sunPositionLeft","sunPositionTop","cloudePositionTop","cloudePositionRight","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a57bc8b1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/windmill.7a331bd0.png\";","module.exports = __webpack_public_path__ + \"static/media/windmill-spiner.b914d7ab.png\";","import React, { Component } from 'react';\nimport '../App.css';\n\nclass AnimatedTyping extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      typing: \"\",\n      letterIndex: 0,\n      sentanceIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.startTyping) {\n      this.typingText();\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.startTyping !== nextProps.startTyping) {\n      return true;\n    }\n    if (this.state.typing !== nextState.typing ||\n      this.state.letterIndex !== nextState.letterIndex ||\n      this.state.sentanceIndex !== nextState.sentanceIndex) {\n      return true;\n    }\n    if (this.props.text !== nextProps.text) {\n      return true;\n    }\n    if (this.props.clearTyping !== nextProps.clearTyping) {\n      return true;\n    }\n    return false\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.startTyping !== prevProps.startTyping && this.props.startTyping) {\n      this.typingText();\n    }\n    if (this.props.text !== prevProps.text) {\n      //this.setState({typing: \"\"})\n    }\n  }\n\n  typingText = () => {\n    const speed = this.props.speed;\n    const type = this.props.text[this.state.sentanceIndex].substring(0, this.state.letterIndex);\n    this.setState({ typing: type, letterIndex: this.state.letterIndex + 1 })\n    const typeSantance = setTimeout(this.typingText, speed);\n    if (this.state.letterIndex > this.props.text[this.state.sentanceIndex].length) {\n      this.setState({ letterIndex: 0 })\n      clearTimeout(typeSantance);\n\n\n      //if there is more santences on the same line\n      if (this.props.text.length - 1 > this.state.sentanceIndex) {\n        this.setState({ sentanceIndex: this.state.sentanceIndex + 1, letterIndex: 0 })\n        setTimeout(this.typingText, 2500);\n      } else {\n        console.log(\"AnimatedTyping sends done typing\")\n        this.setState({ sentanceIndex: 0 })\n        this.props.doneTyping()\n      }\n\n    }\n  }\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        {this.state.typing}{this.props.startTyping ? <span className=\"underline\">_</span> : \"\"}\n      </div>\n    );\n  }\n}\n\nexport default AnimatedTyping;\n\n\n\n/*\n\n\n(this.props.text !== prevProps.text && this.props.text !== null)\n*/","import React, { Component } from 'react';\nimport AnimatedTitleAndSubtitleBlock from './AnimatedTitleAndSubtitleBlock.js';\nimport AnimatedTyping from './AnimatedTyping'\nimport './Page1.css';\n\nclass Page1 extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      texts: [\n        {\n          text: [\"Hi\"],\n          class: \"hi\"\n        },\n        {\n          text: [\"I`m Amir Metsu\"],\n          class: \"mainTitle\"\n        },\n        {\n          text: [\"3D Artist, Animator\"],\n          class: \"amir-subtitle\"\n        },\n        {\n          text: [\"I can animate , create assets, model, sculpt and paint characters.\"],\n          class: \"amir-description\"\n        },\n        {\n          text: [\"I can also manage projects and create all kinds of 3D contant according to costumer's need\"],\n          class: \"amir-description\"\n        }\n      ],\n      onTyping: 0\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    if (this.state.onTyping !== nextState.onTyping) {\n      return true;\n    }\n    return false;\n  }\n\n  componentDidMount() {\n  }\n\n  onDoneParagraphTyping = () => {\n    if (this.state.texts.length <= this.state.onTyping) {\n      this.setState({ onTypingMode: false })\n    } else {\n      this.setState({ onTyping: this.state.onTyping + 1 })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"page1\">\n        <div className=\"opening-text\">\n          <div className=\"textBlock\">\n            {\n              this.state.texts.map((textblock, index) =>\n                <AnimatedTyping\n                  className={textblock.class}\n                  text={textblock.text}\n                  speed={100}\n                  startTyping={this.state.onTyping === index}\n                  doneTyping={() => this.onDoneParagraphTyping()}\n                />\n              )\n            }\n          </div>\n        </div>\n\n        {window.innerWidth > 800\n          ? <iframe src=\"https://player.vimeo.com/video/235837646?autoplay=1&loop=1&controls=0&muted=1\" width=\"800\" height=\"500\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen ></iframe>\n          : <iframe src=\"https://player.vimeo.com/video/235837646?autoplay=1&loop=1&controls=0&muted=1\" width=\"auto\" height=\"auto\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen ></iframe>\n        }\n      </div>\n    );\n  }\n}\n\n\nexport default Page1;\n\n\n\n\n// {\n//   text1: [\"I`m Amir Metsu\"],\n//   class1: \"mainTitle\",\n//   text2: [\"3D Artist, Animator\"],\n//   class2: \"subTitle\",\n//   text3: [\"I can animate , create assets, model, sculpt and paint characters. I can also manage projects and create all kinds of 3D contant according to costumer's need\"]\n// },\n// {\n//   text1: [\"I can animate , create assets, model, sculpt and paint characters. I can also manage projects and create all kinds of 3D contant according to costumer's need\"],\n//   class1: \"subTitle\",\n//   text2: [\"3D Artist\", \"Animator\", \"Project Manager\", \"And a 3D Gerenalist\"],\n//   class2: \"arrayTitles\"\n// },\n// {\n//   text1: [\"I mainly use: Autodesk Maya, Zbrush, PhotoShop, Plotaverse, Premiere\"],\n//   class1: \"subTitle\",\n//   text2: [\"And somtimes I also use: substance painter, After Effect, Lightwave, 3DS Max and more... \"],\n//   class2: \"subTitle\"\n// }","import React, { Component } from 'react';\nimport AnimatedTyping from './AnimatedTyping.js';\nimport '../App.css';\n\nclass AnimatedTitleAndSubtitleBlock extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      onTyping: 1\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n\n    if (this.props.text1 !== nextProps.text1) {\n      return true;\n    }\n    if (this.state.onTyping !== nextState.onTyping) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.text1 !== prevProps.text1) {\n      //this.setState({onTyping: 1})\n    }\n  }\n\n  componentDidMount() {\n  }\n\n  onDoneWordTyping = (num) => {\n    if (this.state.onTyping < 3) {\n      this.setState({ onTyping: this.state.onTyping + 1 })\n    } else {\n      if (num === 3) {\n        console.log(\"AnimatedTitleAndSubtitleBlock sends done typing\")\n        this.props.doneTyping()\n      }\n    }\n  }\n\n\n  render() {\n    return (\n      <div >\n        <AnimatedTyping\n          className={this.props.firstTextClassName}\n          text={this.props.text1}\n          speed={this.props.speed1}\n          startTyping={this.state.onTyping === 1}\n          doneTyping={() => this.onDoneWordTyping(1)}\n        />\n        <AnimatedTyping\n          className={this.props.secondTextClassName}\n          text={this.props.text2}\n          speed={this.props.speed2}\n          startTyping={this.state.onTyping === 2}\n          doneTyping={() => this.onDoneWordTyping(2)} />\n        <AnimatedTyping\n          className={this.props.secondTextClassName}\n          text={this.props.text3}\n          speed={this.props.speed2}\n          startTyping={this.state.onTyping === 3}\n          doneTyping={() => this.onDoneWordTyping(3)} />\n      </div>\n    );\n  }\n}\n\nexport default AnimatedTitleAndSubtitleBlock;\n\n","import React, {Component} from 'react';\nimport './Page2.css';\n\nclass Paragraph extends Component {\n  constructor(props){\n    super(props)\n     this.state = {\n     };\n  }\n\n  componentDidMount(){\n  }\n\n\n  render(){\n  return (\n      <div className=\"paragraph\">\n        <h3 className=\"paragraph-title\"><b>{this.props.company}</b> | {this.props.title}</h3>\n        <p className=\"paragraph-date\">{this.props.date}</p>\n        <p className=\"paragraph-description\">{this.props.description}</p>\n      </div>\n  );\n  }\n}\n\n\nexport default Paragraph;\n\n","import React, {Component} from 'react';\nimport './Page2.css';\nimport Paragraph from './Paragraph.js'\n\nclass Page2 extends Component {\n  constructor(props){\n    super(props)\n     this.state = {\n     };\n  }\n\n  componentDidMount(){\n  }\n\n\n  render(){\n  return (\n      <div className=\"page2\">\n        <div className=\"row\">\n          <h2 className=\"main-titles\">Professional Experience</h2>\n          <Paragraph\n            company=\"Photuro3D\"\n            title=\"Technical Animator, 3D Generalist\"\n            date=\"2018 - Now, Tel Aviv\"\n            description=\"Wide skills in 3D modeling, sculpting and texturing for 3D printing (ZBrush)\n            Animating 3D human models\n            Creating automation pipelines for Rig and retargeting animation (Maya)\n            Operating Motion Capture Sensor Suit, forming a motion capture animation library\n            Full control and understanding of Photuro3D scanning technology. (Mantis Vision)\n            Working with customers to create animation and design according to customer needs\n            Created Equirectangular Dynamic Backgrounds (Photoshop, Plotaverse)\n            Working with the marketing team to brand wallpaper using Photoshop\"/>\n\n          <h2 className=\"main-titles\">Volunteering</h2>\n          <Paragraph\n            company=\"Animation Union Israel\"\n            title=\"Student Representor\"\n            date=\"2017 - 2019\"\n            description=\"Mentoring Project - Mentoring Students as part of Israel Animation Industry’s\n            Israel Animation Industry’s “Employment Fair” at the Anination Festival\n            Producing “The Real World” lecture\n            \"/>\n        \n        </div>\n        <div className=\"brake\"></div>\n        <div className=\"row\">\n          <h2 className=\"main-titles\">Education</h2>\n          <Paragraph\n            company=\"Nexttut Education\"\n            title=\"Character Creation curse\"\n            date=\"2019\"\n            description=\"\"/>\n          <Paragraph\n            company=\"Wonder ArtHouse\"\n            title=\"Texture Extreme Course\"\n            date=\"2018\"\n            description=\"\"/>\n          <Paragraph\n            company=\"IAC (Israel.Animation.College)\"\n            title=\"3D Animation\"\n            date=\"2015 - 2017\"\n            description=\"\"/>\n        </div>\n      </div>\n  );\n  }\n}\n\n\nexport default Page2;\n\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n    };\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.page !== nextProps.page) {\n      return true;\n    }\n    if (this.props.showErrows !== nextProps.showErrows) {\n      return true;\n    }\n    return false;\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className=\"Pagination\">\n        {(this.props.page !== 1 && this.props.showErrows)\n          ? <button className=\"pagination-arrow-a pagination-arrow-left\" onClick={() => this.props.flipPage(\"prev\")}>\n            <i className=\"fas fa-angle-left pagination-arrow fa-3x\"></i>\n          </button>\n          : \"\"\n        }\n\n        {(this.props.page !== 3 && this.props.showErrows)\n          ? <button className=\"pagination-arrow-a pagination-arrow-a-right\" onClick={() => this.props.flipPage(\"next\")}>\n            <i className=\"fas fa-angle-right pagination-arrow fa-3x\"></i>\n          </button>\n          : \"\"\n        }\n\n      </div>\n    );\n  }\n}\n\n\nexport default Pagination;\n\n","import React, {Component} from 'react';\nimport windmill from './assets/windmill.png';\nimport windmillSpin from './assets/windmill-spiner.png';\nimport Page1 from './Page1/PageOne.js';\nimport Page2 from './Page2/PageTwo.js';\nimport Pagination from './Pagination.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n     this.state = {\n       onPage: 1,\n       onTypingAnimation: true,\n       showErrows: true,\n       sunPositionLeft: 1, \n       sunPositionTop: 1,\n       cloudePositionTop: 69,\n       cloudePositionRight: 4\n     };\n  }\n\n  shouldComponentUpdate(nextProps, nextState){\n    if(this.state.onPage !== nextState.onPage){\n      return true;\n    }\n    if(this.state.sunPositionLeft !== nextState.sunPositionLeft){\n      return true;\n    }\n    if(this.state.showErrows !== nextState.showErrows){\n      return true;\n    }\n    return false;\n  }\n\n  componentDidMount(){\n  }\n\n\n  flipPage = (direction) => {\n    this.setState({onTypingAnimation: false})\n    if(direction === \"next\" && this.state.onPage !== 3){\n      this.setState({onPage: this.state.onPage + 1})\n    }\n    if(direction === \"prev\" && this.state.onPage !== 1){\n      this.setState({onPage: this.state.onPage - 1})\n    }\n  }\n\n\n  render(){\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          {\n            this.state.onPage === 1\n            ? <Page1\n                onTypingAnimation={this.state.onTypingAnimation}/>\n            : \"\"\n          }\n          {\n            this.state.onPage === 2\n            ? <Page2/>\n            : \"\"\n          }\n          <Pagination\n            page={this.state.onPage}\n            flipPage={this.flipPage}\n            showErrows={this.state.showErrows}/>\n\n     \n      </header>\n    </div>\n  );\n  }\n}\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"@fortawesome/fontawesome-free/css/all.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}